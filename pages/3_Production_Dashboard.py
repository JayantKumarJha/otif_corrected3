# -*- coding: utf-8 -*-
"""3_Production_Dashboard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ggMBCcN0YjzKuXUkFNiQ0jwUzxByg5uR
"""

import streamlit as st
import pandas as pd
import plotly.graph_objects as go
from pathlib import Path

st.set_page_config(page_title="Production Dashboard", layout="wide")
st.title("📊 Unified Production Dashboard")

# Look for latest schedule files
ampoule_file = Path("Ampoule_Schedule.xlsx")
vial_file = Path("Vial_Schedule.xlsx")

if not ampoule_file.exists() and not vial_file.exists():
    st.warning("⚠️ No schedule files found. Please run the Ampoule or Vial scheduler first.")
else:
    st.success("✅ Found Scheduled Files!")

    # Load available data
    dfs = []
    if ampoule_file.exists():
        df1 = pd.read_excel(ampoule_file)
        df1["Line"] = "Ampoule"
        dfs.append(df1)

    if vial_file.exists():
        df2 = pd.read_excel(vial_file)
        df2["Line"] = "Vial"
        dfs.append(df2)

    df = pd.concat(dfs, ignore_index=True)

    if "Units Produced" not in df.columns or "Date" not in df.columns:
        st.warning("⚠️ Required columns ('Units Produced', 'Date') are missing.")
    else:
        st.subheader("📌 Key Metrics")
        col1, col2, col3 = st.columns(3)
        col1.metric("📦 Total Units", f"{df['Units Produced'].sum():,}")
        col2.metric("🔁 Total Batches", df[df["Stage"] == "Produce"].shape[0])
        col3.metric("📅 Production Days", df["Date"].nunique())

        st.subheader("📈 Daily Production Chart")

        daily = df[df["Stage"] == "Produce"].groupby("Date")["Units Produced"].sum().reset_index()
        max_val = daily["Units Produced"].max()
        min_val = daily["Units Produced"].min()
        avg_val = daily["Units Produced"].mean()
        max_date = daily.loc[daily["Units Produced"].idxmax(), "Date"]
        min_date = daily.loc[daily["Units Produced"].idxmin(), "Date"]

        fig = go.Figure()
        fig.add_trace(go.Bar(
            x=daily["Date"], y=daily["Units Produced"],
            name="Daily Production", marker_color='lightblue'
        ))
        fig.add_trace(go.Scatter(
            x=daily["Date"], y=[avg_val]*len(daily),
            name="Average", mode="lines", line=dict(color="blue", dash="dash")
        ))
        fig.add_trace(go.Scatter(
            x=daily["Date"], y=[max_val]*len(daily),
            name="Max", mode="lines", line=dict(color="green")
        ))
        fig.add_trace(go.Scatter(
            x=daily["Date"], y=[min_val]*len(daily),
            name="Min", mode="lines", line=dict(color="red")
        ))
        fig.update_layout(
            title="📊 Units Produced Per Day",
            xaxis_title="Date", yaxis_title="Units",
            template="simple_white"
        )
        st.plotly_chart(fig, use_container_width=True)

        st.subheader("📍 Highlights")
        st.write(f"🟢 Max Production: **{int(max_val):,}** on **{max_date}**")
        st.write(f"🔴 Min Production: **{int(min_val):,}** on **{min_date}**")
        st.write(f"🔵 Average Production: **{int(avg_val):,}** units")

        st.subheader("📋 Full Schedule")
        st.dataframe(df, use_container_width=True)